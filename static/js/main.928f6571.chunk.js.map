{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","styles","noStatistics","Statistics","good","neutral","bad","total","positivePercentage","statisticItem","FeedbackOptions","options","onLeaveFeedback","map","option","name","type","button","onClick","Section","title","children","section","App","state","handleIncrement","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","totalFeedback","feedbackOptions","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,oC,qBCAlCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,qLCKbC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAWC,IAAOC,aAArB,SAAoCH,KC6B9BI,EA5BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACa,IAAVD,EACC,cAAC,EAAD,CAAcR,QAAS,sBAEvB,gCACE,oBAAGC,UAAWC,IAAOQ,cAArB,mBAA2CL,KAC3C,oBAAGJ,UAAWC,IAAOQ,cAArB,sBAA8CJ,KAC9C,oBAAGL,UAAWC,IAAOQ,cAArB,kBAA0CH,KAC1C,oBAAGN,UAAWC,IAAOQ,cAArB,oBAA4CF,KAC5C,oBAAGP,UAAWC,IAAOQ,cAArB,gCACsBD,EADtB,a,gBCaKE,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBAEEC,KAAMD,EACNE,KAAK,SACLhB,UAAWC,IAAOgB,OAClBC,QAAS,kBAAMN,EAAgBE,IALjC,SAOGA,GANIA,S,iBCQFK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASrB,UAAWC,IAAOqB,QAA3B,UACE,6BAAKF,IACJC,MCFDE,E,4MACJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,gBAAkB,SAAAX,GAChB,EAAKY,SAAL,eACGZ,EAAS,EAAKU,MAAMV,GAAU,K,EAInCa,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQpB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBsB,gCAAkC,SAAArB,GAEhC,OADkBsB,KAAKC,MAAO,EAAKN,MAAMpB,KAAOG,EAAS,M,4CAI3D,WACE,MAA+BwB,KAAKP,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB0B,EAAgBD,KAAKJ,qBACrBnB,EACJuB,KAAKH,gCAAgCI,GACjCC,EAAkBC,OAAOC,KAAKJ,KAAKP,OACzC,OACE,qCACE,cAAC,EAAD,CAASJ,MAAO,wBAAhB,SACE,cAAC,EAAD,CACET,QAASsB,EACTrB,gBAAiBmB,KAAKN,oBAG1B,cAAC,EAAD,CAASL,MAAO,aAAhB,SACE,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,EACPxB,mBAAoBA,a,GA3Cd4B,aAmDHb,ICnDfc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.928f6571.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticItem\":\"Statistics_statisticItem__3CCNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noStatistics\":\"Notification_noStatistics__2ycRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import styles from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={styles.noStatistics}>{message}</p>;\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport Notification from '../Notification';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      {total === 0 ? (\n        <Notification message={'No feedback given'} />\n      ) : (\n        <div>\n          <p className={styles.statisticItem}>Good: {good}</p>\n          <p className={styles.statisticItem}>Neutral: {neutral}</p>\n          <p className={styles.statisticItem}>Bad: {bad}</p>\n          <p className={styles.statisticItem}>Total: {total}</p>\n          <p className={styles.statisticItem}>\n            Positive feedback: {positivePercentage}%\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map(option => {\n        return (\n          <button\n            key={option}\n            name={option}\n            type=\"button\"\n            className={styles.button}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.node,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState({\n      [option]: this.state[option] + 1,\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    const positives = Math.floor((this.state.good / total) * 100);\n    return positives;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage =\n      this.countPositiveFeedbackPercentage(totalFeedback);\n    const feedbackOptions = Object.keys(this.state);\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={feedbackOptions}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}